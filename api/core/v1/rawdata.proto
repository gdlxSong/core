
syntax = "proto3";

package api.core.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/core/api/core/v1;v1";
option java_multiple_files = true;
option java_package = "api.core.v1";

service Rawdata {
	rpc GetRawdata (GetRawdataRequest) returns (GetRawdataResponse) {
		option (google.api.http) = {
			post : "/rawdata/{entity_id}"
            body : "*" 
		};
	};
	rpc DownloadRawdata (DownloadRawdataRequest) returns (DownloadRawdataResponse) {
		option (google.api.http) = {
			get : "/rawdata/{entity_id}"
		};
	};
}

message GetRawdataRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
              json_schema: {
                title: "GetRawdata"
                description: "Get raw data Request"
              }
            };
    string entity_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "实体 id"}];
    int64 start_time = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "起始时间"}];
    int64 end_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "终止时间"}];
    string path = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "属性的位置"}];
    int32 page_num= 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "记录开始位置"}];
    int32 page_size = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "每页限制条数"}];
    bool is_descending = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "是否逆序， false：不逆序，true:逆序"}];
    map<string, string> filters = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "过滤条件"}];
}

message GetRawdataResponse {
    int32 total = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "total count of the entities"}];
    int32 page_num= 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "记录开始位置"}];
    int32 page_size = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "每页限制条数"}];
    repeated RawdataResponse items = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "data list"}];
}

message RawdataResponse {
    int64 timestamp = 1;
    string id = 2;
    string entity_id = 3;
    string path = 4;
    string values = 5;
}

message DownloadRawdataRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
              json_schema: {
                title: "GetTSData"
                description: "Get time series Request"
              }
            };
    string entity_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "实体 id"}];
    int64 start_time = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "起始时间"}];
    int64 end_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "终止时间"}];
    string marks = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "标识符"}];
}

message DownloadRawdataResponse {
    bytes data = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "content"}];
    string length = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "content length in string"}];
    string filename = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "filename"}];
}